// Generated by CoffeeScript 1.6.3
var StringValidator, ValidationErrors, errors;

ValidationErrors = require('./validation-errors').ValidationErrors;

errors = require('../errors');

StringValidator = StringValidator = (function() {
  function StringValidator(_arg) {
    var outError;
    this.string1 = _arg.string1, this.string2 = _arg.string2;
    if (typeof this.string1 !== 'string') {
      outError = new errors.DataNotStringError('String validator: input data is not string');
      outError['data'] = this.string1;
      throw outError;
    }
    if (typeof this.string2 !== 'string') {
      outError = new errors.DataNotStringError('String validator: input data is not string');
      outError['data'] = this.string2;
      throw outError;
    }
  }

  StringValidator.prototype.validate = function() {
    var error;
    if (this.string1 !== this.string2) {
      error = {
        "0": {
          "property": [],
          "attributeValue": true,
          "message": "Real value differs from expected",
          "validatorName": "string"
        },
        "length": 1,
        "errorMessages": {}
      };
    } else {
      error = {
        "length": 0,
        "errorMessages": {}
      };
    }
    return new ValidationErrors(error);
  };

  StringValidator.prototype.getHash = function(data) {
    return crypto.createHash('md5').update(JSON.stringify(data)).digest('hex');
  };

  return StringValidator;

})();

module.exports = {
  StringValidator: StringValidator
};
